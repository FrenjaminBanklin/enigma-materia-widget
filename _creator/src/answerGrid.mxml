<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:components="materia.components.*" width="406" height="104"
           creationComplete="init()">
	<mx:HBox width="100%" height="100%">
		<mx:Canvas width="85" height="100%"
			horizontalScrollPolicy="off"
			verticalScrollPolicy="off"
			clipContent="false">
			<components:PercentField id="percentInput"
				left="-2" right="-4" bottom="0" horizontalScrollPolicy="off"
				verticalScrollPolicy="off" clipContent="false"/>
			<mx:Label text="Value:" left="5" bottom="30" color="#000000"/>
			<mx:Label id="answerLetterLabel" styleName="answerLetter" horizontalCenter="0" textAlign="center" width="100%" height="53" top="5" color="#000000"/>
		</mx:Canvas>
		<mx:Canvas width="100%" height="100%">
			<mx:VBox left="5" top="5" bottom="5" right="5">
				<mx:HBox width="100%" height="100%" horizontalGap="4">
				<mx:TextArea focusIn="{dontDrag(); focusOnMainText(event); }"
					focusOut="doDrag()"
					change="updateQuestionText()"
					id="answerText"
					width="100%" height="100%" color="#000000"/>
				<mx:Canvas id="deleteButton" buttonMode="true" styleName="deleteAnswerButton" toolTip="Delete Answer" mouseOver="deleteButton.styleName='deleteAnswerButtonHover'" mouseOut="deleteButton.styleName='deleteAnswerButton'" click="deleteAnswer();" useHandCursor="true" width="26" height="26" right="2" top="2"></mx:Canvas>
				</mx:HBox>
				<mx:HBox width="100%" height="28">
					<mx:Label text="Feedback:" color="#000000"/>
					<mx:TextInput id="feedbackText"
						 change="updateFeedbackText()" width="100%" focusIn="dontDrag()" focusOut="doDrag()"/>
				</mx:HBox>
			</mx:VBox>
		</mx:Canvas>
	</mx:HBox>
<!-- <mx:Style source="../../assets/E2style.css"/> Not needed....  If used in Enigma, this is already inherited -->
	<mx:Script>
		<![CDATA[
			protected var _isCreationComplete:Boolean = false;
			public override function set data(value:Object):void
			{
				super.data = value;
				if(_isCreationComplete == true)
				{
					if(data != null)
					{
						displayData();
					}
				}
			}
			protected function displayData():void
			{
				answerText.text = data.text;
				feedbackText.text = data.options.feedback;
				answerLetterLabel.text = data.options.letter;
				percentInput.data = data;
			}
			//protected var scoreData:Object = {value:100};
			private function init():void
			{
				_isCreationComplete = true;
				if(data != null)
				{
					displayData();
				}
			}
			private function updateQuestionText():void {
				data.text = answerText.text;
			}
			private function updateFeedbackText():void {
				data.options.feedback = feedbackText.text;
			}
			/*
			private function updateValueText():void {
				data.value = answerValue.text;
				checkValue();
			}
			*/
			private function focusOnText(event:*):void {
				stage.focus = event.currentTarget;
				event.currentTarget.setSelection(0,event.currentTarget.text.length);
			}
			/*
			private function checkValue():void {
				if (Number(answerValue.text) > 100)
				{
					answerValue.text = "100";
					data.value = "100";
				}
				if (Number(answerValue.text) < 0)
				{
					answerValue.text = "0";
					data.value = "0";
				}
			}
			*/
			private function dontDrag():void {
				dispatchEvent(new EnigmaEvents(EnigmaEvents.FOCUS_ON_ANSWER, {}, true));
			}
			private function doDrag():void {
				dispatchEvent(new EnigmaEvents(EnigmaEvents.FOCUS_OUT_ANSWER, {}, true));
			}
			private function focusOnMainText(event:*):void
			{
				if (answerText.text == "[Click to edit]")
				{
					//stage.focus = event.currentTarget;
					event.currentTarget.setSelection(0,event.currentTarget.text.length);
				}
			}
			private function deleteAnswer():void {
				dispatchEvent(new EnigmaEvents(EnigmaEvents.DELETE_ANSWER_CLICKED, {"letter":data.options.letter}, true));
			}
		]]>
	</mx:Script>
</mx:Canvas>