<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="108" height="108" backgroundAlpha="0.0" horizontalScrollPolicy="off" verticalScrollPolicy="off">
<!-- <mx:Style source="../../assets/E2style.css"/> Not needed....  If used in Enigma, this is already inherited -->
<mx:Canvas id="main"
	mouseDown="mouseDown()"
	creationComplete="checkStatus()"
	mouseUp="mouseUp()"
	click="clicked()"
	doubleClick="clicked()"
	doubleClickEnabled="true"
	mouseOut="mouseOut()" mouseOver="mouseOver()"
	width="98" height="98"
	backgroundColor="#D1D7E1" borderStyle="solid" borderThickness="3" borderColor="#16222A"
	horizontalCenter="0" verticalCenter="0"
	horizontalScrollPolicy="off" verticalScrollPolicy="off">
	<mx:Label styleName="{_indexStyleName}"
		text="{dataOptionIndex}"
		fontWeight="bold"
		textAlign="center"
		right="5"
		left="5"
		color="#000000"
		top="5"/>
	<mx:Canvas id="deleteButton" buttonMode="true"
		styleName="deleteAnswerButton" toolTip="Delete Question"
		mouseOver="deleteButton.styleName='deleteAnswerButtonHover'"
		mouseOut="deleteButton.styleName='deleteAnswerButton'"
		click="deleteQuestion(event);" useHandCursor="true"
		height="20" top="3" alpha="0.0" right="3" width="20"/>
<mx:Script>
	<![CDATA[
		import nm.draw.shapes.Rect;
		import mx.managers.PopUpManager;
		import mx.controls.Alert;
		public static const LUMINANCE_BRIGHT:String = "bright";
		public static const LUMINANCE_NORMAL:String = "normal";
		public static const LUMINANCE_DIM:String = "dim";
		private static const COLOR_DEFAULT:String = "#D1D7E1";
		private static const COLOR_HIGHLIGHTED:String = "#FDFFDC";
		private static const COLOR_SELECTED:String = "#4A5A9B";
		protected static const TRACE_STRING:String = "EnigmaQuestion.mxml";
		[Bindable]
		protected var dataOptionIndex:String = "";
		[Bindable]
		protected var _sampleText:String = '';
		[Bindable]
		protected var _indexStyleName:String = 'questionTileText';
		public override function set data(data:Object):void
		{
			super.data = data;
			if (data != null) {
				dataOptionIndex = data.options.index;
				// HACK CODE: '?' char not showing up in default font
				if(dataOptionIndex == '?')
				{
					_indexStyleName = 'questionTileTextHackBugfixStyle';
				}
				else
				{
					_indexStyleName = 'questionTileText';
				}
				// END HACK CODE
			}
			else {
				//Alert.show("error");
			}
			checkStatus();
		}
		public function refresh():void
		{
			mouseOut();
		}
		private function checkStatus():void
		{
			var newSampleText:String = '';
			if (data != null)
			{
				if (data.questions != undefined && (data.questions[0].text != "[Empty]" || data.answers.length >= 1))  {
					if(main != null)
					{
						main.setStyle("backgroundColor", "#FFFFFF");
						newSampleText = data.questions[0].text;
						var sampleTextTrunc:String = "";
						for (var i:Number = 0; i < newSampleText.length; i++) {
							if (i == 20) {
								sampleTextTrunc += "...";
								i = newSampleText.length+1;
							}
							else {
								sampleTextTrunc += newSampleText.charAt(i);
							}
						}
						newSampleText = sampleTextTrunc;
					}
				}
			}
			_sampleText = newSampleText;
		}
		private function mouseOver():void {
			main.setStyle("backgroundColor", COLOR_HIGHLIGHTED);
			deleteButton.alpha = 1;
		}
		private function mouseOut():void {
			deleteButton.alpha = 0;
			main.setStyle("backgroundColor", COLOR_DEFAULT);
			checkStatus();
		}
		private function mouseDown():void {
			main.setStyle("backgroundColor", COLOR_SELECTED);
		}
		private function mouseUp():void {
			main.setStyle("backgroundColor", COLOR_HIGHLIGHTED);
//			PopUpManager.addPopUp(this,this, false, to h
		}
		/**
		 * Sets this quiestion to dim, bright, or normal.
		 * @param val a string constant for luminance defined in EnigmaQuestion.mxml
		 */
		public function set luminance(val:String):void
		{
			switch(val)
			{
				case LUMINANCE_BRIGHT:
					main.transform.colorTransform = new ColorTransform(1.5, 1.5, 1.5, 5);
					main.filters = [new GlowFilter(0xFFFF70, 1, 2, 2, .5, 3)];
					break;
				case LUMINANCE_NORMAL:
					main.transform.colorTransform = new ColorTransform(1, 1, 1, 1);
					main.filters = [];
					break;
				case LUMINANCE_DIM:
					main.transform.colorTransform = new ColorTransform(.6, .6, .6, .8);
					main.filters = [];
					break;
			}
		}
		public function clicked():void {
			dispatchEvent(new EnigmaEvents(EnigmaEvents.QUESTION_HIT, {question:data.options.index, item:this}, true));
		}
		private function doubleClicked():void {
			//Alert.show("[EDIT QUESTION MENU...]");
			//dispatchEvent(new EnigmaEvents(EnigmaEvents.QUESTION_HIT, {question:data.options.index, item:this}, true));
		}
		public function dragOver():void {
			main.setStyle("backgroundColor", "#FF0000");
		}
		public function deleteQuestion(e:Event):void
		{
			e.stopImmediatePropagation();
			//trace(TRACE_STRING + "::deleteQuestion");
			dispatchEvent(new EnigmaEvents(EnigmaEvents.DELETE_QUESTION_CLICKED, {question:data.options.index, data:this.data}, true));
		}
	]]>
</mx:Script>
	<mx:Text bottom="5" top="48" left="5" right="5"
		id="sampleText" name="sampleText"
		enabled="true" textAlign="center"
		styleName="questionTileInfoText" selectable="false" text="{_sampleText}"/>
</mx:Canvas> <!--  text="{(data.questions.text == '[Empty]') ? '' : data.questions.text}" -->
</mx:Canvas>